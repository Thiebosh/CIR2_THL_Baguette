0 = entier valeur

ecrire "PARTIE 1 : SI\n\n"
si valeur > 0 {
	ecrire "premier if (pas accessible)\n"
}

si !faux {
	ecrire "deuxieme if - then (accès)\n"
sinon
	ecrire "deuxieme if - else (pas accessible)\n"
}

si valeur + 8 != 0 {
	ecrire "troisième if - then (accès)\n"
sinon
	ecrire "troisième if - else (pas accessible)\n"
}


ecrire "\n\n\nPARTIE 2 : TESTS AVANCES\n\n"
si [[0 == 0 ET 10 > 0] OU 0] ET [5 OU [0 ET (8 - 2) < 8]] {
	ecrire "if test - validé\n"
sinon
	ecrire "if test - échoué\n"
}


ecrire "\n\n\nPARTIE 3 : TANT QUE\n\n"
tantque valeur < 2 {
    ecrire "while : ",++valeur," (2 repetition)\n"
}

faire {
    ecrire "do while : ",--valeur," (2 repetitions)\n"
} valeur >= 0


ecrire "\n\n\nPARTIE 4 : POUR\n\n"
pour 0 = entier i : i < 3 : ++i {
    ecrire "for : ",i,"\n"
}

pour 0 = entier i : i < 15 : 7 += i { //doit redeclarer variable i
    ecrire "for : ",i,"\n"
}

/*
55 = entier exemple
ecrire "avant fonctions : exemple = ",exemple,"\n"

recette testRobustesse1 entier (exemple entier) {
    ecrire "dans fonction 1 : exemple = ",exemple,"\n"
    0 = entier nouvelle_var
    renvoyer 0
}
recette testRobustesse2 entier (exemple entier) {
    110 = exemple
    testRobustesse1 (exemple)
    ecrire "dans fonction 2 : exemple = ",exemple,"\n"
    renvoyer 0
}

testRobustesse1 (exemple)
testRobustesse2 (exemple)
ecrire "après fonctions : exemple = ",exemple,"\n"

ecrire "fonction nouvelle_var n'existe pas en dehors de la fonction : erreur à prévoir\n\n",nouvelle_var
*/
TERMINER
